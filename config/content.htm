<h1>簡介</h1>
<p>               機械設計一乙  40723210   <strong>李承澤<br/></strong>2018 Fall 計算機程式與電腦輔助設計實習課程網站<br/>                  <span style="color: #333333;"><strong> [版權所有</strong>，<strong>請勿私自使用]</strong></span></p>
<p>上課須用到1.[ <a href="http://mde.tw/#/">mde.tw</a> ] 上圖          2.[ <a href="https://github.com/">github</a> ] 下圖</p>
<p><img alt="" height="201" src="/images/未命名.png" width="395"/><img alt="" height="224" src="/images/未命名2.png" width="393"/></p><h2>CMSimfly 網站</h2>
<p>各組必須自行更改 Config 中的網站標題, 且每次完成近端動態網頁編輯後, 以 generate_pages 按鈕, 將動態網頁資料轉為靜態網頁資料, 之後再新增、提交並推送到遠端倉儲.</p>
<h2>reveal 投影片</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/reveal.leo</p>
<h2>pelican 網誌</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/pelican.leo </p>
<p>各分組必須自行更改 @edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p>
<p>更改 @edit publishconf.py 中的 SITEURL</p>
<p></p>
<h1>課程介紹</h1>
<p>        首先我們要在第一周到第九周把老師出的獨立作業給做完，一開始先到<a href="https://github.com/">github</a>用學校email申請帳號，以 s為首加上學號作為帳號例如s40723210，之後進入課程網站<a href="http://mde.tw/#/">mde.tw</a>領取作業，所有上課內容都以數位形式存在，包括網站與教學影片都在<a href="https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos">youtube</a>內，剛開始我們會不懂git的指令，所以要自己上網學習，我有整理了一些git的指令，每一周都要上傳一部影片，上傳自己的練習操作影片或是上傳自己教學影片，老師會在每一周都教學一些不同的東西，像是第二周就是把git倉儲的網站創造出來，還有如何更新內容，而第三周是教學如何以ShareX截圖與拍影片，老師的影片教學都是以上課內容為主，是以ShareX來一邊教我們一邊拍影片上傳的，所以如果當天上課有不懂的話可以到影片中，仔細聆聽與觀看來明白上課內容。</p>
<p>再來是要開始練習Python()的指令了，要一步一步的來學習</p>
<h2>git基本指令</h2>
<ol></ol>
<p>mkdir name 創建一個文檔夾</p>
<p>rm file 刪除</p>
<p>cd name 進入文檔夾</p>
<p>pwd 查看當前目錄</p>
<p>git init<span> </span><span>把當前目錄變成</span>git<span>可以管理的倉庫 生成</span><span>.git</span><span>文檔夾</span></p>
<p>git add name<span> </span><span>把文檔添加到暫存區</span>stage</p>
<p>git commit -m “ ”<span> </span><span>把暫存區所有文檔提交到</span>git<span>當前分支上（本地倉庫）</span></p>
<p>git status<span> </span><span>查看當前</span>git<span>倉庫狀態</span></p>
<p>git diff file<span> </span><span>查看修改的文檔內容</span></p>
<p>git log<span> </span><span>查看從最近到最遠的提交日誌</span></p>
<p>git reset --hard<span> </span><span>版本號  回退到某版本（</span><span>HEAD</span><span>指向當前版本）</span></p>
<pre class="highlight"><span>git push origin HEAD --force 上傳目前(hard)版本</span></pre>
<p>git reflog  <span>查看命令操作歷史</span></p>
<p>git checkout -- file    <span>丟棄工作區文檔的修改</span></p>
<p>git reset HEAD file    <span>丟棄暫存區的文檔</span></p>
<p>git rm file  <span>刪除工作區文檔後還需刪除</span>git<span>中的文檔</span></p>
<p>git checkout --file  <span>恢復誤刪的</span>git<span>文檔</span></p>
<p>關聯一個遠程倉庫   git remote add origin address</p>
<p>第一次推送代碼到遠程倉庫 git push -u origin master</p>
<p><span>（</span>-u<span>會把本地倉庫</span><span>master</span><span>分支和遠程倉庫的</span>master<span>分支</span><span>關聯起來）</span></p>
<p>從遠程倉庫克隆代碼到本地 git clone address</p>
<p>創建分支 git branch name</p>
<p>切換分支 git checkout name     </p>
<p>查看分支 git branch</p>
<p>創建分支並切換到分支上　　git checkout -b name</p>
<p>合併指定分支到當前分支上 git merge name</p>
<p>合併後刪除分支 git branch -d name</p>
<p><strong>合併時出現衝突要手動解決衝突，再提交，最後合併</strong>。</p>
<p>將寫到一半的代碼從工作區拿走存起來 git stash</p>
<p><span>恢復隱藏的代碼到工作區並刪除隱藏位置的代碼</span><span> </span> git stash pop</p>
<p>強行刪除一個沒有合併過的分支 git branch -D name</p>
<p></p>
<h2>python基本語法</h2>
<p>● ”#”符號後是註解（comment），可以在一列的開頭或中間加入<br/>● reserved word or built-in function (變數取名請避開！)<br/>○     and, exec, not, as, finally, or, assert, for, pass, except<br/>○     break, from, print, class, global, raise, continue, if, return<br/>○     def, import, try, del, in, while, elif, is, with, else, lambda, yield<br/>● 縮排視為不同的block (在IF判斷式或迴圈的段落中使用)<br/>○     縮排可以用tab或是數個空格(至少一個空格)。<br/>○     空格的數量不同，視為不同的block (bug很容易因為這一點而發生)<br/>● python的每個變數視為一個object。</p>
<p><span style="color: #000080;"><strong>Python variables</strong></span></p>
<p>● 不需要事先宣告變數，直接用”=“ assign value（賦值）即可。<br/>○     x=3.14 → 實數變數<br/>● 變數類型（data type）根據被賦予的值決定（之後如果被assign不同類型的數<br/>值，該變數的類型就會直接改變）<br/>○     x=‘text’ → 字串變數<br/>● 確認變數的data type: type(x)<br/>● 變數名稱中的大小寫要完全一致（a、A會當作不同的變數）<br/>● python可以在同一個指令中對多個變數賦值<br/>○     x, y = 2, 1 → x = 2, y = 1<br/>● 若想要移除變數，使用del x y<br/>● 常見的data type: number, string, list, tuple, boolean</p>
<p><span style="color: #000080;"><strong>Simple input/output</strong></span></p>
<p>● input(“…”) 在螢幕上顯示字串，並等待使用者輸入字串<br/>○     x = input (“input your name: “)  螢幕上會顯示訊息 input your name:，<br/>       使用者輸入的內容，會用字串類型存到x變數<br/>○    就算使用者輸入數字，仍然是以字串類型儲存（之後會介紹如何切割字串<br/>     （split），轉為數值）<br/>● print (...) 顯示在螢幕上<br/>○     e.g. print (“Hello World!!”)<br/>○     若要一次輸出多個變數至螢幕上，直接以逗號分開 e.g. print(x,y,z)<br/>○     也可以format output</p>
<p><span style="color: #000080;"><strong>Python variable types</strong></span></p>
<p>● Number 數值<br/>○     int : a = 11<br/>○     float: a = 1.1e-18<br/>○     complex: a = 4. + 7j<br/>● String 字串 （ 用“ “ 或 ‘ ‘夾起）<br/>○     e.g. x = “Hello World!” or x = ‘Hello World!’<br/>○     取出字串的局部：x [0:3]<br/>■         注意：index 從 0 開始計算！<br/>■         [a:b] -- begin at index a and end before index b (e.g., x[0:3] -&gt; “Hel”)<br/>○     不可以對字串的局部做更改，e.g. x[0:3] =”Yo!” (這個是錯誤的語法)<br/>● Boolean 邏輯<br/>○     只有True, False兩種值，根據邏輯判斷（IF condition）的結果決定<br/>○     兩個boolean 變數做運算，會以True=1, False=0 做整數運算</p>
<p><span style="color: #000080;"><strong>Python variables: list and tuple</strong></span></p>
<p>● list, tuple<br/>○     類似陣列的概念，但可以混雜儲存不同型態的資料，如下所示<br/>○     List： x = [ 'abcd', 786 , 2.23, 'john', 70.2]<br/>○     Tuple: y = ( 'abcd', 786 , 2.23, 'john', 70.2)<br/>○     assignment: list 使用 [], tuple 使用(), 每個元素都用”，”分開<br/>○     list 的大小及元素可以改變。tuple則不行 (類似常數陣列)<br/>○     sub-list 或是 sub-tuple語法類似取出字串局部：<br/>            x[0:2]  ['abcd', 786 ]<br/>            y[2:4]  (786, 2.23 )</p>
<p><span style="color: #000080;"><strong>Convert data type</strong></span></p>
<p>有時候需要不同型態的資料轉換，例如將字串”10”轉成整數10<br/>下列為常用的built-in function<br/>● int (x)<br/>● float (x)<br/>● str (x)</p>
<p><span style="color: #000080;"><strong>Arithmetic Operators</strong></span></p>
<p>● 加法 +<br/>○     string 相加：形成新的字串                              ● 次方 **<br/>■         x = “Hello”, y = “World”                                ● 取餘數 %<br/>■         c = x + y → c = “HelloWorld”                        ● 整除至最近整數 //<br/>● 減法 -                                                                      ○相除後取最接近的整數(整實數)，<br/>● 乘法 *                                                                      結果的類型取決於兩個變數的類型：<br/>○     string 乘一個數字(int)：字串重複幾次                       9//2 = 4<br/>■         x = “Yo!”                                                                    9.0//2.0 = 4.0<br/>■         y = x * 3 → y = “Yo!Yo!Yo!”                                    11.0//3 = 4.0<br/>● 除法 /<br/>○     注意：兩個整數相除，結果是實數<br/>■         x = 21, y = 10<br/>■         c = x / y → c = 2.1</p>
<p><strong><span style="color: #000080;">Arithmetic Operators</span></strong></p>
<p>● 如果要進行下面的運算 a= a+b （用a+b的結果為a重新賦值）<br/>● 在python可以改寫成： a += b<br/>● 所以算術運算符號可以有<br/>        +=     -=     *=     /=     %=     **=     //=</p>
<p><span style="color: #000080;"><strong>Modules or package （也稱為library）</strong></span></p>
<p>● ”modules” or “packages”：通常是其他人寫好的函數或指令，打包成一個「工具庫」<br/> 方便分享使用。（非python內建，可能會需要下載安裝）<br/>○     本課程會用到的library: numpy (array), matplotlib (基本繪圖), basemap (地圖),<br/>         netCDF (讀nc檔)<br/>● 使用方式：import module_name<br/>○     在執行工具庫內的指令之前，就要先把modules 引進來（不然python不會認得<br/>        非內建的指令）<br/>○     使用工具庫內的指令：module_name.function (or module_name.constant)<br/>○     可以使用import module_name as xxx (xxx是你自己取的縮寫）<br/>        使用指令的語法就簡化成xxx.function，例如:<br/>             import math as m<br/>             x=m.cos(m.pi)</p>
<h1>組員操作影片</h1>
<p>每週各分組組員必須將參與分組協同過程之電腦操作流程錄成影片後, 上傳至各自的 Youtube 帳號區, 並嵌入各分組網站頁面中.</p>
<p></p>
<h2>Week1</h2>
<p><span>1.建立github帳號</span></p>
<p><span>2.建立倉儲: s40723210.github.io</span></p>
<p><span>2.git clone  https://github.com/mdecourse/2018fall</span></p>
<p><span>3.git clone  https://github.com/s40723210/s40723210.github.io</span></p>
<p><span>4.從2018fall資料夾複製裡面的檔案，排除.git和README.me，並貼到自己的資料夾內</span></p>
<p><span>5.git status(檢查狀態)&gt;git add .(增加)&gt;git commit -m "名稱"( 提交)&gt;git push (推送)</span></p>
<p><span></span></p>
<p style="text-align: center;"><strong>↓ 老師的範例影片 ↓</strong></p>
<p><span>國立虎尾科技大學機械設計工程系計算機程式 - 一乙第八週第三部分, 說明如何利用 Eric6 IDE 建立所需的 calculator 計算機程式對話表單. 過程中主要學習如何啟動 Eric6, 如何建立 Eric6 專案, 如何切換 Sources tab 與 Form tab, 如何在進入 Qt Designer 後利用格點布局, 建立按鈕與 Line Edit 部件.</span></p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/g4ksXq7sQ4M" width="560"></iframe><strong></strong></p>
<h2>Week2</h2>
<p><span>1.先登入github帳號</span></p>
<p><span>2.到<a href="https://classroom.github.com/a/wlLbt5TQ">https://classroom.github.com/a/wlLbt5TQ</a>領取個人倉儲作業</span></p>
<p><span>3.在site-s40723210的 settings &gt; Branches &gt; 把branches改為gh-pages</span></p>
<p><span>4.如下圖，之後就可以開始更新網址了</span></p>
<p><img alt="" height="358" src="/images/d8cd77c4-15db-40c8-bfa7-99225ddaca09.png" width="547"/></p>
<h2>Week3</h2>
<p style="text-align: center;"><strong>更改網頁標題(2018 Fall分組網站 --&gt;Githud個人網站)</strong></p>
<p style="text-align: left;">1.開啟近端的[動態]與[靜態]</p>
<p style="text-align: left;">2.login &gt; 密碼:admin(每個人都一樣)</p>
<p style="text-align: left;">3.點選Config ，更改標題</p>
<p style="text-align: left;">4.git status  &gt; git add .  &gt; git commit -m "add" &gt;git push</p>
<p style="text-align: left;">5以下是我拍的影片教學 </p>
<p style="text-align: left;"><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="//www.youtube.com/embed/M2ANRwM4Shc?feature=youtu" width="560"></iframe></p>
<h2>Week4</h2>
<p style="text-align: center;"><strong>更改reveal投影片(個人倉儲&gt;s40723210)</strong></p>
<p>1.先開啟檔案(p37)</p>
<p>2.<span>以 </span>Leo Editor<span> 開啟 config/reveal.leo</span></p>
<p><span>3.開啟靜態http-server. py</span></p>
<p><span>4.修改reveal投影片的封面標題</span></p>
<p><span>5.Save &gt; git push</span></p>
<p><span>6.以下是我的教學影片</span></p>
<p style="text-align: left;"><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yGOvh4XaGyE" width="560"></iframe></strong></p>
<h2>Week5</h2>
<p>1.到<a href="http://mde.tw/#/">mde.tw</a>  &gt; 18CP &gt; 簡介 &gt; Python &gt; Python 教材</p>
<p>2.閱讀並往下滾動，到(開始練習 print() 用法, 並著手建立函式)</p>
<p>3.開始練習，並且把[Ex1]  [Ex2]  [Ex3]  [Ex4]給學會</p>
<p>4.我在Python 手冊 中有練習，可以到那裡參考</p>
<p>5.以下是我的[<strong>如何上傳影片教學] </strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/K5kBIbWj4vw" width="560"></iframe></strong></p>
<h2>Week6</h2>
<p style="text-align: center;">如何跟改網誌(blog)的網址</p>
<p style="text-align: left;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-neP1Eeh4-4" width="560"></iframe></p>
<h2>Week7</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/SHLMwGrO8qo" width="560"></iframe></p>
<h2>Week8</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/VFHe91fXspM" width="560"></iframe></p>
<h1>Python 手冊</h1>
<p>計算機程式教材:  <a href="http://mde.tw/cp2018/content/">http://mde.tw/cp2018/content/</a> </p>
<p>可攜程式下載: <a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing">p37.7z</a></p>
<h2>練習-1</h2>
<p><span style="color: #3366ff;"><strong>有序可變動列表 List</strong></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ad=[12,60,25,70,90]
print(ad)        
print(ad[0])    
print(ad[3])    
print(ad[1:4]) </pre>
<p>[12, 60, 25, 70, 90]<br/>12<br/>70<br/>[60, 25, 70]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ad=[12,60,25,70,90]
ad[0]=55 # 把 55 放到列表中的第一個位置
print(ad)</pre>
<p>[55, 60, 25, 70, 90]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ad=[12,22,60,80,90]
ad[1:4]=[] # 連續刪除列表中從編號 1 到編號 4(不包括) 的資料
print(ad)</pre>
<p>[12, 90]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ad=[12,60,25,70,90]
ad=ad+[12,33]  #也可以用ad+=[12,33]
print(ad)
</pre>
<p>[12,60,25,70,90,12,33]</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ad=[12,60,25,70,90] # 取得列表的長度 len(列表資料)
bc=len(ad)
print(bc)</pre>
<p>5</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">adc=[[3,4,5],[6,7,8]]
print(adc[0])
print([adc[0][1])
print(adc[0][0:2])
print(adc)
adc[0][0:2]=[5,5,5] #[0][0:2]代表[3,4,5]的[3,4]
print(adc)</pre>
<p>[3, 4, 5]<br/>4<br/>[3, 4]<br/>[[3, 4, 5], [6, 7, 8]]<br/>[5, 5, 5, 5], [6, 7, 8]]<br/>[[5,5,5,5,],[6,7,8]]</p>
<p><span style="color: #3366ff;"><strong>有序不可變動列表 Tuple</strong></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sd=(3,4,5)
# sd[0]=5 # 錯誤︰Tuple的資料不可以變動
print(sd[2])
print(sd[0:2])</pre>
<p>5<br/>(3, 4)</p>
<p>其餘跟上面的內容相似只差於不可改動</p>
<h2>練習-2</h2>
<p><span style="color: #3366ff;"><strong># 集合的運用</strong></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">s1={3,4,5}
print(3 in s1)
print(10 in s1)
print(10 not in s1)</pre>
<p>True<br/>False<br/>True</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">s1={3,4,5}
s2={4,5,6,7}
s3=s1&amp;s2 # 交集︰取兩個集合中，相同的資料
print(s3)
s3=s1|s2 # 聯集︰取兩個合中的所有資料，但不重複取
print(s3)
s3=s1-s2 # 差集︰從 s1 中，減去和 s2 重疊的部分
print(s3)
s3=s1^s2 # 反交集︰取兩個集合中，重複的部分
print(s3)</pre>
<p>{4, 5}<br/>{3, 4, 5, 6, 7}<br/>{3}<br/>{3, 6, 7}</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">s=set("Hello") # 把字串中的字母折拆成集合︰ set(字串)
print(s)
print("H" in s)
print("A" in s)</pre>
<p>{'H', 'e', 'l', 'o'}<br/>True<br/>False</p>
<p><span style="color: #3366ff;"><strong>#字典的運用︰key-value 配對</strong></span><span style="color: #3366ff;"><strong></strong></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">dic={"apple":"蘋果","bug":"蟲蟲"}
print(dic)
print(dic["apple"])
dic["apple"]="小蘋果"
print(dic["apple"])</pre>
<p>{'apple': '蘋果', 'bug': '蟲蟲'}<br/>蘋果<br/>小蘋果</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">dic={"apple":"蘋果","bug":"蟲蟲"}
print("apple" in dic) # 判斷 key 是否存在
print("test" in dic)
print("test" not in dic)
del dic["apple"] # del(刪除)字典中的鍵值對 (key-value pair)
print(dic)
</pre>
<p>True<br/>False<br/>True<br/>{'bug': '蟲蟲'}</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">dic={x:x*2 for x in [3,4,5]} # 從列表[3,4,5]的資料中產生字典
print(dic)</pre>
<p>{3: 6, 4: 8, 5: 10}</p><h1>OnShape 手冊</h1>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a> </p>
<p>電腦輔助設計實習課程教材: <a href="http://mde.tw/cadp2018/content/">http://mde.tw/cadp2018/content/</a> </p>
<h1>Fusion 360</h1>
<p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">https://www.autodesk.com/products/fusion-360/students-teachers-educators</a> </p>