{"pages":[{"title":"About","text":"2018 Fall 分組網誌 個人倉儲: https://github.com/mdecp2018/site-s40723210 個人投影片: https://mdecp2018.github.io/site-s40723210/reveal 個人網站: https://mdecp2018.github.io/site-s40723210","tags":"misc","url":"./pages/about/"},{"title":"Week-16","text":"期末評分標準 心得: 這一周，老師把期末要交的東西都列出來，突然就要我們上台報告，還要交個人的學習歷程影片，有一點難受，因為期末有點忙而且又放假，再加上很多人根本不知道要做甚麼，所以要趕工把東西都做出來很累，接著就讓我們自己整理網頁和專題，我終於把遊戲的雛型給做出來，之後就要開始增加新東西了。","tags":"Misc","url":"./2018-Fall-Project-Blog-W16.html"},{"title":"Week-15","text":"分組協同報告 心得: 為了要期末報告，老師就教我們用一種，分組協同報告的東西，而這種東西呢是利用，leo-editor來進行協同的，因為老師是在二年級上課的時候，操作和錄影還有講解，所以我們要自己看，以前老師拍的影片，而這種分組協同報告，是每個組員update都會有紀錄的東西，就可以清楚的知道誰做了什麼，也可以有紀錄查看以前的資料，就可以避免一次做錯就要全部重做。","tags":"Misc","url":"./2018-Fall-Project-Blog-W15.html"},{"title":"Week-14","text":"分組倉儲 login checklogin 的輸入條件 1.從分組倉儲的cmsimfly.leo用leo-editor編輯 2.搜尋check login 3.新增if/elif判斷式 心得: 目前我有把一些kmolgame的範例，改成我想做的小遊戲，可是有很多指令是範例裡面沒有的，剛好今天是交python語法，我們學到的東西是if判斷，當我們在密碼輸入bg3時會出現hellow world，有多寫一個else，就是用來判斷輸入的，在遊戲可以做出猜數字的程式，有一點用不太到呢。","tags":"Misc","url":"./2018-Fall-Project-Blog-W14.html"},{"title":"Week-13","text":"Ggame 課程教學 kmolgame 小遊戲 1.開啟P37-18.11 2.用leo-editor開啟kmolgame的kmolgame.leo 3.從最簡單的Ggame範例複製一個@clean simple1.html 4.然後就可以開始更改了 心得: 我們的專題就是一個小遊戲，老師有用了一個kmolgame的leo來讓我們了解，但是說實在的，我們頂多改內建的程式變換圖片或速度或者是大小而已，要我們做出一個小遊戲的話，要有說明那些指令是做甚麼的，可是說明大多都是英文，而且我們對python的語法一竅不通，是需要一點時間才能理解的，所以可能我們做出來的遊戲會遇到一堆的問題。","tags":"Misc","url":"./2018-Fall-Project-Blog-W13.html"},{"title":"Week-12","text":"heroku 同步倉儲 雲端同步github倉儲 1.創建heroku帳號 2.新增app cp2018-bg3 3.輸入heroku login登入 4.登入完git clone https://git.heroku.com/cp2018-bg3.git 5.把倉儲裡的東西都放進去 4.更新倉儲加入 \"runtime.txt\" \"Procfile\" \"requirements.txt\" 5.一樣步驟git push，連結githu倉儲 心得: 而現在要開始辦heroku網頁帳號，由組長來創一個app，來讓我們可以跟github同步，我原本以為可以直接在heroku網頁做改動，可是必須要有一個主機才可以實現這個功能，所以不能直接改還是要在github用上船的，讓我有一點小失望，我覺得heroku網站的用意應該是，讓我們有兩個倉儲可以防止，其中一個資料消失時還有備用的。","tags":"Misc","url":"./2018-Fall-Project-Blog-W12.html"},{"title":"Week-11","text":"heroky 課程解說 更新heroku指令 1.先到自己的分組倉儲 2.git clone https://github.com/mdecp2018/finalproject-bg3 3.之後的步驟跟以前一樣更新 4.下載heroku系統，放入p37內 5.把start.bat裡加入(%Disk%:\\heroku\\bin;) 6.重新開啟後就可以使用heroku指令 心得: 今天老師教的是把我們的隨身系統更新一個heroku指令，在為什麼加入這個軟件呢，因為我們之後每一組，都會用到heroku的網站，要上傳到heroku的網站指令是不同的，所以需要下載新的heroku的插件，雖然跟git指令有一點類似，只是heroku網站可以在線上改，下禮拜才會開始用heroku網站，所以我很期待這個功能。","tags":"Misc","url":"./2018-Fall-Project-Blog-W11.html"},{"title":"Week-10","text":"eric6 課程講解 心得: 這禮拜是學長來跟我們說明如何利用新版 P37-18.11 中的 eric6 軟體，可以利用內部的一些特殊模組，來做出一些連動的東西，而這次學長教的是利用slider、porgress bar、button來做一個小小的應用程式，我覺得很有趣可以自己創作想要的東西，像是登入器就可以利用eric6來做出來，可以認真的來學習這個軟體。","tags":"Misc","url":"./2018-Fall-Project-Blog-W10.html"},{"title":"Week-17","text":"python 語法教學 心得: 補課三次，#判斷式if #while 迴圈 #for 迴圈 # 集合的運用 #字典的運用 #有序可變動列表 List #有序不可變動列表 Tuple，以上是我整理學長所教的大鋼，基本上就是講解python的語法和運用，還有稍微講一下遊戲中的語法應用，這些python我有自己先學習一小部份了，所以學長講的我就聽得懂，只是有些我沒自學的還是要花時間搞懂。","tags":"Misc","url":"./2018-Fall-Project-Blog-W17.html"},{"title":"Week-8","text":"git remote add指令 同步倉儲gitlab 1.先到 gitlab 可以用自己的github帳號登入 2.之後在gitlab創建一個倉儲 3.然後到個人資料設定密碼，跟github密碼一樣 4.git remote add cp2018 https://gitlab.com/s40723210/cp2018-s40723210 5.git push cp2018 完成後就同步了 心得: 第八周開始使用gitlab，這樣可以同時push兩個不同的倉儲，就可以避免一個倉儲壞掉了就沒有了，同步的時候有點難，跟githud指令不太一樣，所以我把兩個帳號密碼都用成一樣的，這樣就不太會搞混和忘記了。","tags":"Misc","url":"./2018-Fall-Project-Blog-W8.html"},{"title":"Week-7","text":"github問題 應急處理: 1.因為githud無法登入 2.所以利用 Fossil SCM 建立區域網路 3.開始教學如何使用Fossil SCM，來更新網頁 4.如果githud之後都不能使用就只能用Fossil SCM 心得: 由於github在這禮拜突然故障，所以老師找出其他方法解決並探討，剛開始會發現github沒辦法登入，聽到老師說才知道是壞掉了，希望可以趕快回復，這樣就不用讓我們使用Fossli SCM 了。","tags":"Misc","url":"./2018-Fall-Project-Blog-W7.html"},{"title":"Week-6","text":"修正bug的發生 更新CMSimfly 倉儲中的flaskspp.py 1.先到mde.tw > 18CP > 工具 > CMSimfly 2.進入https://github.com/chiamingyen/cmsimfly 3.點flaskapp.py > Raw > Ctrl+a(全選) > 複製 4.到自己的site-s40723210，打開flaskapp.py把裡面刪掉 5.貼上，Save > git push 心得: 第六周開始強調要升級，最新的CMSimfly倉儲中的flaskapp.py，因為這幾周來同學碰到了許多的bug，所以老師有更新很多處理bug的東西，我們就要去更新才不會出現這一些bug。","tags":"Misc","url":"./2018-Fall-Project-Blog-W6.html"},{"title":"Week-5","text":"python 課程說明 python教材: 1.到mde.tw > 18CP > 簡介 > Python > Python 教材 2.閱讀並往下滾動，到(開始練習 print() 用法, 並著手建立函式) 3.開始練習，並且把[Ex1] [Ex2] [Ex3] [Ex4]給學會 4.我在 Python 手冊 中有練習，可以到那裡參考 心得: 第五周又要開始學新的東西了，現在要學python指令了，一個未完又要開始學另一個了，實在是有點太多了，因為我完全就是沒有底子的人，所以要把指令都用熟練，是要花很多時間的，我只能盡力而為了。","tags":"Misc","url":"./2018-Fall-Project-Blog-W5.html"},{"title":"Week-4","text":"reveal 課程說明 更改reveal投影片 1.先開啟檔案(p37) 2.以 Leo Editor 開啟 config/reveal.leo 3.開啟靜態http-server. py 4.修改reveal投影片的封面標題 5.Save > git push 心得: 第四周是要開始學習如何更改reveal投影片，跟改CMSimfly完全不相同，是要以 Leo Editor來更改內容，一開始我完全的不懂該怎麼使用，我就一直看老師的操作影片，慢慢的我就知道該如何使用了。","tags":"Misc","url":"./2018-Fall-Project-Blog-W4.html"},{"title":"Week-3","text":"2018/09/24中秋節放假~ 心得: 我自己有操作更改網站標題，基本上都是一樣的操作流程，我有拍影片可以到我的網站看。","tags":"Misc","url":"./2018-Fall-Project-Blog-W3.html"},{"title":"Week-2","text":"如何領取作業, 如何管理 CMSimfly 作業倉儲 老師的mdecp2018作業倉儲 1.先登入github帳號 2.到https://classroom.github.com/a/wlLbt5TQ 領取個人倉儲作業 3.在site-s40723210的 settings > Branches > 把branches改為gh-pages 4.之後就可以開始更新網址了 心得: 第二週學習如何管理期中作業倉儲的網站內容以及投影片內容，每週必須放上進度，要時常去管理自己的CMSimfly網站，做法是平常上課教的，可以一步一步來完成。","tags":"Misc","url":"./2018-Fall-Project-Blog-W2.html"},{"title":"Week-1","text":"如何利用 p37 中的 git 建立個人的 Github Pages 網站 開始學習github 1.建立github帳號 2.建立倉儲: s40723210.github.io 2.git clone https://github.com/mdecourse/2018fall 3.git clone https://github.com/s40723210/s40723210.github.io 4.從2018fall資料夾複製裡面的檔案，排除.git和README.me，並貼到自己的資料夾內 5.git status(檢查狀態)>git add .(增加)>git commit -m \"名稱\"( 提交)>git push (推送) 心得: 第一週開始接觸github有點不習慣，因為我完全沒有碰過，老師說的我完全的聽不懂，但是之後其實只要看教學影片慢慢的就會了，所以我覺得應該是撐得住。","tags":"Misc","url":"./2018-Fall-Project-Blog-W1.html"},{"title":"2018 Fall 分組網誌","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"./2018-Fall-Project-Blog.html"}]}